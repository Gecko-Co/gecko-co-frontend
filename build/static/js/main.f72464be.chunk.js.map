{"version":3,"sources":["components/Search/Search.js","components/Card/CardDetails.js","components/Card/Card.js","components/Pagination/Pagination.js","components/Filter/FilterBTN.js","components/Filter/category/Status.js","components/Filter/category/Species.js","components/Filter/category/Gender.js","components/Filter/Filter.js","components/Navbar/Navbar.js","components/Filter/category/InputGroup.js","Pages/Episodes.js","Pages/Location.js","App.js","reportWebVitals.js","index.js","components/Card/Card.module.scss","components/Search/Search.module.scss"],"names":["Search","_ref","setSearch","updatePageNumber","_jsxs","className","concat","styles","search","children","_jsx","onChange","e","target","value","placeholder","input","type","onClick","preventDefault","btn","CardDetails","id","useParams","fetchedData","updateFetchedData","useState","name","location","origin","gender","image","status","species","api","useEffect","data","fetch","then","res","json","src","alt","Card","display","page","results","map","x","images","Link","style","textDecoration","to","card","img","width","height","content","badge","_Fragment","Pagination","pageNumber","info","setWidth","window","innerWidth","updateDimensions","addEventListener","removeEventListener","jsx","ReactPaginate","nextLabel","forcePage","previousLabel","previousClassName","nextClassName","activeClassName","marginPagesDisplayed","pageRangeDisplayed","pageCount","pages","onPageChange","selected","pageClassName","pageLinkClassName","FilterBTN","task","index","for","Status","updateStatus","item","Species","updateSpecies","Gender","updateGender","items","Filter","selectedStatus","setSelectedStatus","cursor","clear","reload","Navbar","class","NavLink","InputGroup","changeID","total","Array","keys","Episodes","setResults","React","setInfo","air_date","episode","setID","a","Promise","all","characters","Location","dimension","number","setNumber","residents","placeholderData","count","price","Home","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f72464be.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./Search.module.scss\";\n\nconst Search = ({ setSearch, updatePageNumber }) => {\n  let searchBtn = (e) => {\n    e.preventDefault();\n  };\n  return (\n    <form\n      className={`${styles.search} d-flex flex-sm-row flex-column align-items-center justify-content-center gap-4 mb-5`}\n    >\n      <input\n        onChange={(e) => {\n          updatePageNumber(1);\n          setSearch(e.target.value);\n        }}\n        placeholder=\"Search for geckos\"\n        className={styles.input}\n        type=\"text\"\n      />\n      <button\n        onClick={searchBtn}\n        className={`${styles.btn} btn btn-primary fs-5`}\n      >\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst CardDetails = () => {\n  let { id } = useParams();\n\n  let [fetchedData, updateFetchedData] = useState([]);\n  let { name, location, origin, gender, image, status, species } = fetchedData;\n\n  let api = `https://rickandmortyapi.com/api/character/${id}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      updateFetchedData(data);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container d-flex justify-content-center mb-5\">\n      <div className=\"d-flex flex-column gap-3\">\n        <h1 className=\"text-center\">{name}</h1>\n\n        <img className=\"img-fluid\" src={image} alt=\"\" />\n        {(() => {\n          if (status === \"Dead\") {\n            return <div className=\"badge bg-danger fs-5\">{status}</div>;\n          } else if (status === \"Alive\") {\n            return <div className=\" badge bg-success fs-5\">{status}</div>;\n          } else {\n            return <div className=\"badge bg-secondary fs-5\">{status}</div>;\n          }\n        })()}\n        <div className=\"content\">\n          <div className=\"\">\n            <span className=\"fw-bold\">Gender : </span>\n            {gender}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Location: </span>\n            {location?.name}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Origin: </span>\n            {origin?.name}\n          </div>\n          <div className=\"\">\n            <span className=\"fw-bold\">Species: </span>\n            {species}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CardDetails;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Card.module.scss\";\nimport CardDetails from \"./CardDetails\";\n\nconst Card = ({ page, results }) => {\n  let display;\n\n  if (results) {\n    display = results.map((x) => {\n      // Ensure x and x.location are defined before accessing their properties\n      let { id, images, name, status, species = {} } = x || {};\n\n      // Now, even if x or location is undefined, the code won't throw an error\n      // but instead, use the default empty object {} and proceed without crashing\n      return (\n        <Link\n          style={{ textDecoration: \"none\" }}\n          to={`${page}${id}`}\n          key={id}\n          className=\"col-lg-4 col-md-6 col-sm-6 col-12 mb-4 position-relative text-dark\"\n        >\n          <div\n            className={`${styles.card} d-flex flex-column justify-content-center`}\n          >\n            <img className={`${styles.img} img-fluid`} src={images} alt={name} style={{ width: \"250px\", height: \"200px\" }} />\n            <div className={`${styles.content}`}>\n              <div className=\"fs-5 fw-bold mb-4\">{name}</div>\n              \n                <div className=\"fs-7 fw-normal\">Species</div>\n                <div className=\"fs-6\">{species || 'Unknown'}</div>\n              \n\n              \n              \n            </div>\n          </div>\n\n          {(() => {\n            if (status === \"Sold\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-danger`}\n                >\n                  {status}\n                </div>\n              );\n            } else if (status === \"Available\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-success`}\n                >\n                  {status}\n                </div>\n              );\n            } else if (status === \"Reserved\") {\n              return (\n                <div\n                  className={`${styles.badge} position-absolute badge bg-primary`}\n                >\n                  {status}\n                </div>\n              );\n            }\n          })()}\n        </Link>\n      );\n    });\n  } else {\n    display = \"No Geckos Found :/\";\n  }\n\n  return <>{display}</>;\n};\n\nexport default Card;\n","import React, { useState, useEffect } from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nconst Pagination = ({ pageNumber, info, updatePageNumber }) => {\n  let pageChange = (data) => {\n    updatePageNumber(data.selected + 1);\n  };\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const updateDimensions = () => {\n    setWidth(window.innerWidth);\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateDimensions);\n    return () => window.removeEventListener(\"resize\", updateDimensions);\n  }, []);\n\n  return (\n    <>\n      <style jsx>\n        {`\n          @media (max-width: 768px) {\n            .pagination {\n              font-size: 12px;\n            }\n            .next,\n            .prev {\n              display: none;\n            }\n          }\n          @media (max-width: 768px) {\n            .pagination {\n              font-size: 14px;\n            }\n          }\n        `}\n      </style>\n      <ReactPaginate\n        className=\"pagination justify-content-center my-4 gap-4\"\n        nextLabel=\"Next\"\n        forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\n        previousLabel=\"Prev\"\n        previousClassName=\"btn btn-primary fs-5 prev\"\n        nextClassName=\"btn btn-primary fs-5 next\"\n        activeClassName=\"active\"\n        marginPagesDisplayed={width < 576 ? 1 : 2}\n        pageRangeDisplayed={width < 576 ? 1 : 2}\n        pageCount={info?.pages}\n        onPageChange={pageChange}\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n      />\n    </>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst FilterBTN = ({ input, task, updatePageNumber, index, name }) => {\n  return (\n    <div>\n      <style jsx>\n        {`\n          .x:checked + label {\n            background-color: #0b5ed7;\n            color: white;\n          }\n          input[type=\"radio\"] {\n            display: none;\n          }\n        `}\n      </style>\n\n      <div className=\"form-check\">\n        <input\n          className=\"form-check-input x\"\n          type=\"radio\"\n          name={name}\n          id={`${name}-${index}`}\n        />\n        <label\n          onClick={(x) => {\n            task(input);\n            updatePageNumber(1);\n          }}\n          className=\"btn btn-outline-primary\"\n          for={`${name}-${index}`}\n        >\n          {input}\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterBTN;\n","import React from \"react\";\nimport FilterBTN from \"../FilterBTN\";\n\nconst Status = ({ updateStatus, updatePageNumber }) => {\n  let status = [\"Available\", \"Sold\", \"Reserved\"];\n  return (\n    <div className=\"accordion-item\">\n      <h2 className=\"accordion-header\" id=\"headingOne\">\n        <button\n          className=\"accordion-button\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseOne\"\n          aria-expanded=\"true\"\n          aria-controls=\"collapseOne\"\n        >\n          Status\n        </button>\n      </h2>\n      <div\n        id=\"collapseOne\"\n        className=\"accordion-collapse collapse show\"\n        aria-labelledby=\"headingOne\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\n          {status.map((item, index) => (\n            <FilterBTN\n              key={index}\n              index={index}\n              name=\"status\"\n              task={updateStatus}\n              updatePageNumber={updatePageNumber}\n              input={item}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport FilterBTN from \"../FilterBTN\";\n\nconst Species = ({ updateSpecies, updatePageNumber }) => {\n  let species = [\n    \"Leopard Gecko\",\n    \"Crested Gecko\",\n    \"African Fat-tailed Gecko\",\n    \"Knob-Tailed Gecko\",\n  ];\n  return (\n    <div className=\"accordion-item \">\n      <h2 className=\"accordion-header\" id=\"headingTwo\">\n        <button\n          className=\"accordion-button collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseTwo\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseTwo\"\n        >\n          Species\n        </button>\n      </h2>\n      <div\n        id=\"collapseTwo\"\n        className=\"accordion-collapse collapse\"\n        aria-labelledby=\"headingTwo\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\n          {species.map((item, index) => {\n            return (\n              <FilterBTN\n                name=\"species\"\n                index={index}\n                key={index}\n                updatePageNumber={updatePageNumber}\n                task={updateSpecies}\n                input={item}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Species;\n","import React from \"react\";\nimport FilterBTN from \"../FilterBTN\";\n\nconst Gender = ({ updateGender, updatePageNumber }) => {\n  let genders = [\"Female\", \"Male\", \"Genderless\",];\n  return (\n    <div className=\"accordion-item\">\n      <h2 className=\"accordion-header\" id=\"headingThree\">\n        <button\n          className=\"accordion-button collapsed\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#collapseThree\"\n          aria-expanded=\"false\"\n          aria-controls=\"collapseThree\"\n        >\n          Gender\n        </button>\n      </h2>\n      <div\n        id=\"collapseThree\"\n        className=\"accordion-collapse collapse\"\n        aria-labelledby=\"headingThree\"\n        data-bs-parent=\"#accordionExample\"\n      >\n        <div className=\"accordion-body d-flex flex-wrap gap-3\">\n          {genders.map((items, index) => {\n            return (\n              <FilterBTN\n                name=\"gender\"\n                index={index}\n                key={index}\n                updatePageNumber={updatePageNumber}\n                task={updateGender}\n                input={items}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Gender;\n","import React, { useState } from 'react'; // Ensure useState is imported from 'react'\nimport Status from './category/Status'; // Adjust the path as necessary\nimport Species from './category/Species'; // Adjust the path as necessary\nimport Gender from './category/Gender'; // Adjust the path as necessary\n\nconst Filter = ({\n  pageNumber,\n  updatePageNumber,\n  updateStatus,\n  updateGender,\n  updateSpecies,\n}) => {\n  const [selectedStatus, setSelectedStatus] = useState('');\n\n  let clear = () => {\n    updateStatus(\"\");\n    updateGender(\"\");\n    updateSpecies(\"\");\n    updatePageNumber(1);\n    window.location.reload(false);\n  };\n\n  const handleStatusChange = (e) => {\n    const newStatus = e.target.value;\n    setSelectedStatus(newStatus);\n    updateStatus(newStatus);\n  };\n\n  return (\n    <div className=\"col-lg-3 col-12 mb-5\">\n      <div className=\"text-center fw-bold fs-4 mb-2\">Filters</div>\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={clear}\n        className=\"text-primary text-decoration-underline text-center mb-3\"\n      >\n        Clear Filters\n      </div>\n      <div className=\"accordion\" id=\"accordionExample\">\n        <Status\n          selectedStatus={selectedStatus}\n          setSelectedStatus={setSelectedStatus}\n          updatePageNumber={updatePageNumber}\n          updateStatus={updateStatus}\n        />\n        <Species\n          updatePageNumber={updatePageNumber}\n          updateSpecies={updateSpecies}\n        />\n        <Gender\n          updatePageNumber={updatePageNumber}\n          updateGender={updateGender}\n        />\n      </div>\n      {/* Status filter dropdown */}\n\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport \"../../App.scss\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand fs-3 ubuntu\">\n          Gecko Co. \n        </Link>\n        <style jsx>{`\n          button[aria-expanded=\"false\"] > .close {\n            display: none;\n          }\n          button[aria-expanded=\"true\"] > .open {\n            display: none;\n          }\n        `}</style>\n        <button\n          className=\"navbar-toggler border-0\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"fas fa-bars open text-dark\"></span>\n          <span class=\"fas fa-times close text-dark\"></span>\n        </button>\n        <div\n          className=\"collapse navbar-collapse justify-content-end\"\n          id=\"navbarNavAltMarkup\"\n        >\n          <div className=\"navbar-nav fs-5\">\n            <NavLink to=\"/\" className=\"nav-link\">\n              For Sale\n            </NavLink>\n            {/* <NavLink to=\"/episodes\" className=\"nav-link\">\n              Morph Wiki\n            </NavLink> */}\n            {/* <NavLink\n              activeClassName=\"active\"\n              className=\"nav-link\"\n              to=\"/location\"\n            >\n              Breeders\n            </NavLink> */}\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n\n","import React from \"react\";\n\nconst InputGroup = ({ name, changeID, total }) => {\n  return (\n    <div className=\"input-group mb-3\">\n      <select\n        onChange={(e) => changeID(e.target.value)}\n        className=\"form-select\"\n        id={name}\n      >\n        <option value=\"1\">Choose...</option>\n        {[...Array(total).keys()].map((x, index) => {\n          return (\n            <option value={x + 1}>\n              {name} - {x + 1}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default InputGroup;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card/Card\";\nimport InputGroup from \"../components/Filter/category/InputGroup\";\n\nconst Episodes = () => {\n  let [results, setResults] = React.useState([]);\n  let [info, setInfo] = useState([]);\n  let { air_date, episode, name } = info;\n  let [id, setID] = useState(1);\n\n  let api = `https://rickandmortyapi.com/api/episode/${id}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      setInfo(data);\n\n      let a = await Promise.all(\n        data.characters.map((x) => {\n          return fetch(x).then((res) => res.json());\n        })\n      );\n      setResults(a);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mb-3\">\n        <h1 className=\"text-center mb-3\">\n          Episode name :{\" \"}\n          <span className=\"text-primary\">{name === \"\" ? \"Unknown\" : name}</span>\n        </h1>\n        <h5 className=\"text-center\">\n          Air Date: {air_date === \"\" ? \"Unknown\" : air_date}\n        </h5>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3 col-12 mb-4\">\n          <h4 className=\"text-center mb-4\">Pick Episode</h4>\n          <InputGroup name=\"Episode\" changeID={setID} total={51} />\n        </div>\n        <div className=\"col-lg-8 col-12\">\n          <div className=\"row\">\n            <Card page=\"/episodes/\" results={results} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Episodes;\n","import React, { useEffect, useState } from \"react\";\nimport Card from \"../components/Card/Card\";\nimport InputGroup from \"../components/Filter/category/InputGroup\";\n\nconst Location = () => {\n  let [results, setResults] = React.useState([]);\n  let [info, setInfo] = useState([]);\n  let { dimension, type, name } = info;\n  let [number, setNumber] = useState(1);\n\n  let api = `https://rickandmortyapi.com/api/location/${number}`;\n\n  useEffect(() => {\n    (async function () {\n      let data = await fetch(api).then((res) => res.json());\n      setInfo(data);\n\n      let a = await Promise.all(\n        data.residents.map((x) => {\n          return fetch(x).then((res) => res.json());\n        })\n      );\n      setResults(a);\n    })();\n  }, [api]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mb-3\">\n        <h1 className=\"text-center mb-3\">\n          Location :\n          <span className=\"text-primary\">\n            {\" \"}\n            {name === \"\" ? \"Unknown\" : name}\n          </span>\n        </h1>\n        <h5 className=\"text-center\">\n          Dimension: {dimension === \"\" ? \"Unknown\" : dimension}\n        </h5>\n        <h6 className=\"text-center\">Type: {type === \"\" ? \"Unknown\" : type}</h6>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-lg-3 col-12 mb-4\">\n          <h4 className=\"text-center mb-4\">Pick Location</h4>\n          <InputGroup name=\"Location\" changeID={setNumber} total={126} />\n        </div>\n        <div className=\"col-lg-8 col-12\">\n          <div className=\"row\">\n            <Card page=\"/location/\" results={results} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Location;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport React, { useState } from \"react\";\n\nimport Search from \"./components/Search/Search\";\nimport Card from \"./components/Card/Card\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport Filter from \"./components/Filter/Filter\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Episodes from \"./Pages/Episodes\";\nimport Location from \"./Pages/Location\";\nimport CardDetails from \"./components/Card/CardDetails\";\n\nconst placeholderData = {\n  info: {\n    count: 5,\n    pages: 1,\n  },\n  results: [\n    {\n      id: 1,\n      name: \"KT1\",\n      status: \"Sold\",\n      species: \"Knob-tailed Gecko\",\n      gender: \"Male\",\n      images: \"images/kt1.jpg\",\n    },\n    {\n      id: 2,\n      name: \"LG1\",\n      status: \"Reserved\",\n      species: \"Leopard Gecko\",\n      gender: \"Male\",\n      images: \"images/lg1.jpg\",\n      price: \"$1000\"\n    },\n    {\n      id: 3,\n      name: \"AFT1\",\n      status: \"Available\",\n      species: \"African Fat-Tailed Gecko\",\n      gender: \"Male\",\n      images: \"images/aft1.jpg\",\n      price: \"$1000\"\n    },\n    {\n      id: 4,\n      name: \"C1\",\n      status: \"Available\",\n      species: \"Crested Gecko\",\n      gender: \"Male\",\n      images: \"images/c1.jpg\",\n      price: \"$1000\"\n    },\n    {\n      id: 5,\n      name: \"LG2\",\n      status: \"Reserved\",\n      species: \"Leopard Gecko\",\n      gender: \"Male\",\n      images: \"images/lg2.jpg\",\n      price: \"$1000\"\n    },\n  ],\n};\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n      </div>\n      <Routes>\n        <Route path=\"/gecko-co\" element={<Home />} />\n        <Route path=\"/:id\" element={<CardDetails />} />\n\n        <Route path=\"/episodes\" element={<Episodes />} />\n        <Route path=\"/episodes/:id\" element={<CardDetails />} />\n\n        <Route path=\"/location\" element={<Location />} />\n        <Route path=\"/location/:id\" element={<CardDetails />} />\n      </Routes>\n    </Router>\n  );\n}\n\nconst Home = () => {\n  let [pageNumber, updatePageNumber] = useState(1);\n  let [status, updateStatus] = useState(\"\");\n  let [gender, updateGender] = useState(\"\");\n  let [species, updateSpecies] = useState(\"\");\n  let [search, setSearch] = useState(\"\");\n\n  // Use static data instead of fetched data\n  let fetchedData = placeholderData; // Use the static data here\n  let { info, results } = fetchedData;\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"text-center mb-3\">Geckos</h1>\n      <Search setSearch={setSearch} updatePageNumber={updatePageNumber} />\n      <div className=\"container\">\n        <div className=\"row\">\n          <Filter\n            pageNumber={pageNumber}\n            status={status}\n            updateStatus={updateStatus}\n            updateGender={updateGender}\n            updateSpecies={updateSpecies}\n            updatePageNumber={updatePageNumber}\n          />\n          <div className=\"col-lg-8 col-12\">\n            <div className=\"row\">\n              <Card page=\"/\" results={results} />\n            </div>\n          </div>\n        </div>\n      </div>\n      <Pagination\n        info={info}\n        pageNumber={pageNumber}\n        updatePageNumber={updatePageNumber}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2JGd-\",\"content\":\"Card_content__1pLmX\",\"img\":\"Card_img__1esve\",\"badge\":\"Card_badge__N6omc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__3IYP7\",\"btn\":\"Search_btn__N9dEc\"};"],"sourceRoot":""}